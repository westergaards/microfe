# Welcome to serverless. Read the docs
# https://serverless.com/framework/docs/

service: deploy-remote

plugins:
  - serverless-s3-sync

custom:
  siteName: microfe-remote.com
  aliasHostedZoneId: Z3AQBSTGFYJSTF # us-east-1
  aliasDNSName: http://microfe-remote.com.s3-website-us-east-1.amazonaws.com/
  s3Sync:
    - bucketName: ${self:custom.siteName}
      localDir: static

provider:
  name: aws
  runtime: nodejs6.10
  stage: prod
  stackTags:
    serverless:servess: ${self:service}

resources:
  Resources:
    ## Specifying the S3 Bucket
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.siteName}
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticSite
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource:
                Fn::Join: ["", ["arn:aws:s3:::", { "Ref": "StaticSite" }, "/*"]]

    # DnsRecord:
    #   Type: "AWS::Route53::RecordSet"
    #   Properties:
    #     AliasTarget:
    #       DNSName: ${self:custom.aliasDNSName}
    #       HostedZoneId: ${self:custom.aliasHostedZoneId}
    #     HostedZoneName: ${self:custom.siteName}.
    #     Name:
    #       Ref: StaticSite
    #     Type: "A"

  Outputs:
    StaticSiteS3BucketName:
      Value:
        "Ref": StaticSite
    StaticSiteS3BucketDomainName:
      Value:
        Fn::GetAtt:
          - StaticSite
          - DomainName
    StaticSiteS3BucketWebsiteURL:
      Value:
        Fn::GetAtt:
          - StaticSite
          - WebsiteURL
